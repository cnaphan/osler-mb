

CREATE COMPUTE MODULE ProcessEvent_ApplyRoutingRules
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		
		CALL addToRouteToLabelList(OutputLocalEnvironment, 'SOAP');
		
		--SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'OSLER_TO_SOAP';
		--SET OutputLocalEnvironment.Destination.MQ.DestinationData[2].queueManagerName = 'MB7QMGR';
		--SET OutputLocalEnvironment.Destination.MQ.DestinationData[2].queueName = 'OSLER_TO_SOAP';

		
		
		--set LocalEnvironment.Destination.HTTP.RequestURL  = newUrl;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE PROCEDURE addToRouteToLabelList(IN LocalEnvironment REFERENCE, IN newLabel char) BEGIN
	  /*******************************************************************************
	  * A procedure that adds a label name to the RouteToLabel list in the local environment.
	  * This list is used by a RoteToLabel node.
	  *
	  * IN LocalEnvironment: the LocalEnvironment to be modified. 
	  * IN label:  the label to be added to the list
	  *
	  *******************************************************************************/
		IF LocalEnvironment.Destination.RouterList.DestinationData is null THEN
     		SET OutputLocalEnvironment.Destination.RouterList.DestinationData."label" = newLabel;
 		ELSE
     		CREATE LASTCHILD OF LocalEnvironment.Destination.RouterList.DestinationData
    			NAME 'label' VALUE newLabel; 
  		END IF;
	END;
	
END MODULE;
