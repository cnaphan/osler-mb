BROKER SCHEMA osler.mb


CREATE COMPUTE MODULE SoapIn_Generate_Ack
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();		
		
		-- Extract the event name from the name of the first element of the body
		DECLARE EventName CHARACTER;
		SET EventName = FIELDNAME(InputRoot.XMLNSC.*[<]) || 'Response';
		
		-- Create the response message
		-- Insert this between TYPE and NAME to get a namespace: NAMESPACE 'http://patientflowmonitoring/'
		CREATE LASTCHILD OF OutputRoot.XMLNSC TYPE NameValue  NAME EventName VALUE 'Message received';
		
		SET OutputLocalEnvironment.Destination.SOAP.Reply.Gateway.OneWay = 'true';
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE SoapIn_AppendMethod
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		SET OutputRoot.XMLNSC.*[<].(XMLNSC.Attribute)inputMethod = 'SOAP';
		SET OutputRoot.XMLNSC.*[<].(XMLNSC.Attribute)remoteHost = InputRoot.HTTPInputHeader."X-Server-Name";		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
