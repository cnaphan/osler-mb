<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:ComIbmCompute.msgnode="ComIbmCompute.msgnode" xmlns:ComIbmLabel.msgnode="ComIbmLabel.msgnode" xmlns:ComIbmMQInput.msgnode="ComIbmMQInput.msgnode" xmlns:ComIbmMQOutput.msgnode="ComIbmMQOutput.msgnode" xmlns:ComIbmSOAPEnvelope.msgnode="ComIbmSOAPEnvelope.msgnode" xmlns:ComIbmTrace.msgnode="ComIbmTrace.msgnode" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:eflow="http://www.ibm.com/wbi/2005/eflow" xmlns:osler_mb_RefreshRoutingRules.msgflow="osler/mb/RefreshRoutingRules.msgflow"
    xmlns:osler_mb_SendEventHttp.msgflow="osler/mb/SendEventHttp.msgflow" xmlns:osler_mb_SendEventJms.msgflow="osler/mb/SendEventJms.msgflow" xmlns:osler_mb_SoapFormatting.msgflow="osler/mb/SoapFormatting.msgflow" xmlns:utility="http://www.ibm.com/wbi/2005/eflow_utility" nsURI="osler/mb/ProcessEvent.msgflow"
    nsPrefix="osler_mb_ProcessEvent.msgflow">
  <eClassifiers xmi:type="eflow:FCMComposite" name="FCMComposite_1">
    <eSuperTypes href="http://www.ibm.com/wbi/2005/eflow#//FCMBlock"/>
    <translation xmi:type="utility:TranslatableString" key="ProcessEvent" bundleName="osler/mb/ProcessEvent" pluginId="OslerMessageBrokerFlows"/>
    <colorGraphic16 xmi:type="utility:GIFFileGraphic" resourceName="platform:/plugin/OslerMessageBrokerFlows/icons/full/obj16/ProcessEvent.gif"/>
    <colorGraphic32 xmi:type="utility:GIFFileGraphic" resourceName="platform:/plugin/OslerMessageBrokerFlows/icons/full/obj30/ProcessEvent.gif"/>
    <shortDescription xmi:type="utility:ConstantString" string="Processes events from the incoming queue and sends them out in the proper manner"/>
    <longDescription xmi:type="utility:ConstantString" string="This flow's main role is to read messages from the incoming queue and propogate them to zero or more destinations. Most of the work is done in the Apply Routing Rules node, where all the necessary variables are set and the multiple events are propagated.&#xD;&#xA;&#xD;&#xA;This flow also routes the incoming message into the log queue, where it will be logged at some point in the future."/>
    <composition>
      <nodes xmi:type="ComIbmMQInput.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_3" location="10,21" queueName="Osler.Incoming" messageDomainProperty="XMLNSC">
        <translation xmi:type="utility:ConstantString" string="From Incoming"/>
        <shortDescription xmi:type="utility:ConstantString" string="Get event from the Incoming queue"/>
      </nodes>
      <nodes xmi:type="ComIbmLabel.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_7" location="22,180" labelName="SOAP">
        <translation xmi:type="utility:ConstantString" string="If SOAP"/>
      </nodes>
      <nodes xmi:type="ComIbmSOAPEnvelope.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_8" location="147,180" createEnvelope="true" envelopeLocation="$Environment/Variables/SOAP/Envelope">
        <translation xmi:type="utility:ConstantString" string="Create Envelope"/>
      </nodes>
      <nodes xmi:type="ComIbmLabel.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_19" location="25,238" labelName="REST">
        <translation xmi:type="utility:ConstantString" string="If REST"/>
      </nodes>
      <nodes xmi:type="ComIbmCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_1" location="316,21" computeExpression="esql://routine/osler.mb#ProcessEvent_ApplyRoutingRules.Main" computeMode="all" treatWarningsAsErrors="true">
        <translation xmi:type="utility:ConstantString" string="Apply Routing Rules"/>
      </nodes>
      <nodes xmi:type="ComIbmMQOutput.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_6" location="598,21" queueManagerName="QMGR" queueName="Osler.IncomingLog" transactionMode="no" persistenceMode="no">
        <translation xmi:type="utility:ConstantString" string="To Log Queue"/>
      </nodes>
      <nodes xmi:type="osler_mb_RefreshRoutingRules.msgflow:FCMComposite_1" xmi:id="FCMComposite_1_29" location="331,90" rotation="RIGHT_TO_LEFT">
        <translation xmi:type="utility:ConstantString" string="Refresh Rules"/>
      </nodes>
      <nodes xmi:type="ComIbmTrace.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_16" location="141,21" destination="file" filePath="C:\MQSIFileInput\process-event-log.txt" pattern="${CURRENT_TIMESTAMP} - Event incoming [event=${FIELDNAME(Root.XMLNSC.*[&lt;])}, method=${FIELDVALUE(Root.XMLNSC.*[&lt;].(XMLNSC.Attribute)inputMethod)}, remoteHost=${FIELDVALUE(Root.XMLNSC.*[&lt;].(XMLNSC.Attribute)remoteHost)}]">
        <translation xmi:type="utility:ConstantString" string="Incoming"/>
      </nodes>
      <nodes xmi:type="ComIbmTrace.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_25" location="137,88" destination="file" filePath="C:\MQSIFileInput\process-event-log.txt" pattern="${CURRENT_TIMESTAMP} - Queue caught event  [event=${FIELDNAME(Root.XMLNSC.*[&lt;])}, method=${FIELDVALUE(Root.XMLNSC.*[&lt;].(XMLNSC.Attribute)inputMethod)}]&#xD;&#xA;Errors: ${ExceptionList}">
        <translation xmi:type="utility:ConstantString" string="Queue Catch"/>
      </nodes>
      <nodes xmi:type="ComIbmLabel.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_12" location="25,352" labelName="PubSub">
        <translation xmi:type="utility:ConstantString" string="If PubSub"/>
      </nodes>
      <nodes xmi:type="ComIbmTrace.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_5" location="151,352" destination="file" filePath="C:\MQSIFileInput\process-event-log.txt" pattern="${CURRENT_TIMESTAMP} - Event sent to pubsub [event=${FIELDNAME(Root.XMLNS.*[&lt;])}]. Not implemented yet.">
        <translation xmi:type="utility:ConstantString" string="Not Implemented"/>
      </nodes>
      <nodes xmi:type="osler_mb_SendEventHttp.msgflow:FCMComposite_1" xmi:id="FCMComposite_1_4" location="485,238">
        <translation xmi:type="utility:ConstantString" string="Send via HTTP"/>
        <shortDescription xmi:type="utility:ConstantString" string="Sends an event via HTTP to the destination"/>
      </nodes>
      <nodes xmi:type="osler_mb_SoapFormatting.msgflow:FCMComposite_1" xmi:id="FCMComposite_1_11" location="278,185">
        <translation xmi:type="utility:ConstantString" string="Apply SOAP Formatting"/>
        <shortDescription xmi:type="utility:ConstantString" string="If the destination requires a special format, apply it here"/>
      </nodes>
      <nodes xmi:type="ComIbmLabel.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_9" location="26,295" labelName="JMS">
        <translation xmi:type="utility:ConstantString" string="If JMS"/>
      </nodes>
      <nodes xmi:type="osler_mb_SendEventJms.msgflow:FCMComposite_1" xmi:id="FCMComposite_1_10" location="489,294">
        <translation xmi:type="utility:ConstantString" string="Send via JMS"/>
      </nodes>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_24" targetNode="FCMComposite_1_25" sourceNode="FCMComposite_1_3" sourceTerminalName="OutTerminal.catch" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_1" targetNode="FCMComposite_1_8" sourceNode="FCMComposite_1_7" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_3" targetNode="FCMComposite_1_1" sourceNode="FCMComposite_1_29" sourceTerminalName="OutTerminal.Output" targetTerminalName="InTerminal.in">
        <bendPoints>-116,-46,-37,48</bendPoints>
      </connections>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_2" targetNode="FCMComposite_1_16" sourceNode="FCMComposite_1_3" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_7" targetNode="FCMComposite_1_1" sourceNode="FCMComposite_1_16" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_6" targetNode="FCMComposite_1_6" sourceNode="FCMComposite_1_1" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_9" targetNode="FCMComposite_1_29" sourceNode="FCMComposite_1_1" sourceTerminalName="OutTerminal.out1" targetTerminalName="InTerminal.Input">
        <bendPoints>65,24,65,-45</bendPoints>
      </connections>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_18" targetNode="FCMComposite_1_5" sourceNode="FCMComposite_1_12" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_14" targetNode="FCMComposite_1_4" sourceNode="FCMComposite_1_19" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_17" targetNode="FCMComposite_1_11" sourceNode="FCMComposite_1_8" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_20" targetNode="FCMComposite_1_4" sourceNode="FCMComposite_1_11" sourceTerminalName="OutTerminal.Output" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_5" targetNode="FCMComposite_1_10" sourceNode="FCMComposite_1_9" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.Input"/>
    </composition>
    <propertyOrganizer/>
    <stickyBoard/>
  </eClassifiers>
</ecore:EPackage>
